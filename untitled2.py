# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18u2bypyyO1CvmOP6LLMArq9VgLQzqmwL
"""

import pandas as pd
dataset=pd.read_csv('heart (1).csv')
dataset

dataset.dtypes

dataset.isnull().sum()

y=dataset['target']
y

x = dataset[['age','sex','trestbps','thalach']]
x

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)
print(x_train.shape,x_test.shape,x.shape)

from sklearn.linear_model import LogisticRegression
model=LogisticRegression()
model

x_train

y_train

model.fit(x_train,y_train)

from sklearn.metrics import accuracy_score
x_train_prediction= model.predict(x_train)
training_data_accuracy = accuracy_score(x_train_prediction,y_train)
print("Accurracy on Test data :",training_data_accuracy)

x_test_prediction=model.predict(x_test)
test_data_accuracy = accuracy_score(x_test_prediction,y_test)
print("Accurracy on Test data :",test_data_accuracy)

model.fit(x_train.values, y_train.values)
prep=model.predict([[57,0,140,155]])
print(prep)



import matplotlib.pyplot as plt
plt.figure(figsize=(24,20))


plt.subplot(4, 2, 1)
fig = dataset.boxplot(column='age')
fig.set_title('')
fig.set_ylabel('age')


plt.subplot(4, 2, 2)
fig = dataset.boxplot(column='thalach')
fig.set_title('')
fig.set_ylabel('thalach')


plt.subplot(4, 2, 3)
fig = dataset.boxplot(column='trestbps')
fig.set_title('')
fig.set_ylabel('trestbps')

import seaborn as sns
sns.violinplot(y='thalach',data=dataset)

import seaborn as sns
sns.violinplot(y='trestbps',data=dataset)

plt.plot(x_train.shape, x_test.shape)
plt.title("Linear graph", fontsize=25, color="green")

plt.show()

plt.figure(figsize=(24,20))


plt.subplot(4, 2, 1)
fig = dataset['age'].hist(bins=20)
fig.set_xlabel('age')
fig.set_ylabel('')


plt.subplot(4, 2, 2)
fig = dataset['thalach'].hist(bins=20)
fig.set_xlabel('thalach')
fig.set_ylabel('')


plt.subplot(4, 2, 3)
fig = dataset['trestbps'].hist(bins=20)
fig.set_xlabel('trestbps')
fig.set_ylabel('')

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import seaborn as sns
from sklearn.metrics import confusion_matrix, accuracy_score
f,ax=plt.subplots(figsize=(10,10))
sns.heatmap(dataset.corr(),annot=True,linewidth=0.5,fmt='.1f',ax=ax)
plt.show()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=42)


from sklearn.tree import DecisionTreeClassifier
d=DecisionTreeClassifier()
d.fit(x_train, y_train)
y_pred=d.predict(x_test)

print(accuracy_score(y_test,y_pred))

X_train, X_test, y_train, y_test = train_test_split(dataset.drop('target', 1),
                                                    dataset['target'], test_size = 0.30, random_state=42)
model = RandomForestClassifier(max_depth=5)
model.fit(X_train, y_train)

import numpy as np
X_train, X_test, y_train, y_test = train_test_split(dataset.drop('target', 1),
                                                    dataset['target'], test_size = 0.30, random_state=42)
model = RandomForestClassifier(max_depth=5)
model.fit(X_train, y_train)
y_predict = model.predict(X_test)
cm = confusion_matrix(y_test, y_predict)
sns.heatmap(cm/np.sum(cm),annot=True,fmt=".2%",cmap='Blues')
plt.show()
ac = accuracy_score(y_test,y_predict)
print('Accuracy is: ',ac*100)

